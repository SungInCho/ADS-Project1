library(tm)
install.packages("tm")
install.packages("data.table")
install.packages("tidyverse")
install.packages("tidytext")
install.packages("ggplot2")
install.packages("plotly")
install.packages("DT")
install.packages("scales")
install.packages("wordcloud2")
install.packages("gridExtra")
install.packages("ngram")
install.packages("quanteda")
install.packages("d3heatmap")
install.packages("sentimentr")
install.packages("devtools")
install.packages("knitr")
install.packages("knitr")
install.packages("shiny")
install.packages("knitr")
install.packages("knitr")
install.packages("markdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
update.packages()
install.packages("tm")
install.packages("data.table")
install.packages("tidyverse")
install.packages("tidytext")
install.packages("ggplot2")
install.packages("plotly")
install.packages("DT")
install.packages("scales")
install.packages("wordcloud2")
install.packages("gridExtra")
install.packages("ngram")
install.packages("quanteda")
install.packages("d3heatmap")
install.packages("sentimentr")
install.packages("devtools")
install.packages("shiny")
library(d3heatmap)
install.packages("d3heatmap")
install.packages("devtools")
library(d3heatmap)
devtools::install_github("rstudio/d3heatmap")
# load lyrics data
load('./processed_lyrics.RData')
# load artist information
dt_artist <- fread('../data/artists.csv')
# load lyrics data
load('./processed_lyrics.RData')
# load artist information
dt_artist <- fread('../data/artists.csv')
library(tm)
library(data.table)
library(tidyverse)
library(tidytext)
library(ggplot2)
library(plotly)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(quanteda)
library(d3heatmap)
library(sentimentr)
library(devtools)
library(knitr)
library(shiny)
# load artist information
dt_artist <- fread('../data/artists.csv')
# Word counting in each Lyrics
word.count <- sapply(strsplit(dt_lyrics$stemmedwords, " "), length)
word.count <- word.count[-which(dt_lyrics$year<1970)]
# Indexing
index <- 1:length(word.count)
# Assign time list of decades to years
time_list <- dt_lyrics$year - dt_lyrics$year %% 10
time_list <- time_list[-which(dt_lyrics$year<1970)] # remove years less than 1970 (Two mis-input data, One 1960s data)
year.word_count <- cbind(index,time_list, word.count)
year.word_count <- as.data.frame(year.word_count)
year.word_count$time_list <- as.factor(year.word_count$time_list)
p.word.count <- year.word_count %>%
plot_ly(y= ~ word.count, color= ~time_list, type="box") %>%
layout(title = "Boxplot of Number of Words Used",
yaxis = list(title="# of Words"))
p.word.count
year.word_count.genre <- cbind(year.word_count, genre=dt_lyrics$genre[-which(dt_lyrics$year<1970)])
dat_count <- table(year.word_count.genre[,c("time_list","genre")]) %>%
apply(1, function(x) 100*x/sum(x)) %>%
melt(id.vars=time_list)
p.per.genre <- ggplot(dat_count) +
geom_bar(aes(x = time_list, y = value, fill = genre),
stat = "identity")+
labs(title = "Stacked Barplot of percentage of Genre",
y = list(title="percentage"),
x = list(title=""))
p.per.genre
table(year.word_count.genre[,c("time_list","genre")]) %>%
apply(1, function(x) 100*x/sum(x)) %>%
melt(id.vars=time_list)
table(year.word_count.genre[,c("time_list","genre")])
table(year.word_count.genre[,c("time_list","genre")]) %>%
apply(1, function(x) 100*x/sum(x))
table(year.word_count.genre[,c("time_list","genre")]) %>%
apply(1, function(x) 100*x/sum(x)) %>%
melt(id.vars=time_list)
dat_count <- data.table(year.word_count.genre[,c("time_list","genre")]) %>%
apply(1, function(x) 100*x/sum(x)) %>%
melt(id.vars=time_list)
library(reshape2)
install.packages("reshape2")
library(reshape2)
dat_count <- table(year.word_count.genre[,c("time_list","genre")]) %>%
apply(1, function(x) 100*x/sum(x)) %>%
melt(id.vars=time_list)
rmarkdown::render()
